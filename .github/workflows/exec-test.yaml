name:  Exec tests

on:  workflow_dispatch

jobs:
  linux:

    runs-on: ubuntu-latest
    
    env:
      dotnetOs:  linux-x64
      exec:  delta-kusto

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-restore
    - name: Install dependencies
      run: dotnet restore code
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build
    - name: Build
      run: dotnet build code --configuration Release --no-restore
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
    - name: Unit Tests
      run: |
        dotnet test code/DeltaKustoUnitTest --configuration Release \
        --no-build --verbosity normal
    # See https://github.com/dotnet/designs/blob/main/accepted/2020/single-file/design.md#user-experience
    # & https://docs.microsoft.com/en-us/dotnet/core/deploying/single-file
    # & https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish
    - name: Build single file executable
      run: |
        dotnet publish code/delta-kusto -c release -r $dotnetOs \
          -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true \
          -p:PublishTrimmed=true -p:PublishReadyToRun=true \
          -o bin
    - name: printf
      run: |
        echo "Name:  $exec"
    - name: printf2
      run: |
        echo "$(pwd)/bin/$exec"
    - name: printf3
      run: |
        ls -l $(pwd)/bin/$exec
    # Set environment variables
    - name: Set environment variables
      run: |
        # Exec path
        echo "deltaKustoSingleExecPath=$(pwd)/bin/$exec" >> $GITHUB_ENV
        # ADX integration
        echo "deltaKustoClusterUri=${{ secrets.CLUSTER_URI }}" >> $GITHUB_ENV
        echo "deltaKustoCurrentDb=${{ secrets.CURRENT_DB }}" >> $GITHUB_ENV
        echo "deltaKustoTargetDb=${{ secrets.TARGET_DB }}" >> $GITHUB_ENV
        echo "deltaKustoTenantId=${{ secrets.TENANT_ID }}" >> $GITHUB_ENV
        echo "deltaKustoSpId=${{ secrets.KUSTO_SP_ID }}" >> $GITHUB_ENV
        echo "deltaKustoSpSecret=${{ secrets.KUSTO_SP_SECRET }}" >> $GITHUB_ENV
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
    - name: File-based integration tests (out-of-proc)
      run: |
        # Disable parallelization of tests
        # See https://xunit.net/docs/running-tests-in-parallel
        dotnet test code/DeltaKustoFileIntegrationTest \
        --configuration Release --no-build --verbosity normal \
        -p:ParallelizeTestCollections=false

    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
    - name: ADX-based integration tests (out-of-proc)
      run: |
        # Disable parallelization of tests
        # See https://xunit.net/docs/running-tests-in-parallel
        dotnet test code/DeltaKustoAdxIntegrationTest \
        --configuration Release --no-build --verbosity normal \
        -p:ParallelizeTestCollections=false

  windows:

    runs-on: windows-latest
    # This creates a dependency with the previous job so they do not run in parallel
    # (which would wreck the integration tests)
    needs:  linux
    
    env:
      dotnetOs:  win-x64
      exec:  delta-kusto.exe

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-restore
    - name: Install dependencies
      shell:  bash
      run: dotnet restore code
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build
    - name: Build
      shell:  bash
      run: dotnet build code --configuration Release --no-restore
    # See https://github.com/dotnet/designs/blob/main/accepted/2020/single-file/design.md#user-experience
    # & https://docs.microsoft.com/en-us/dotnet/core/deploying/single-file
    # & https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish
    - name: Build single file executable
      shell:  bash
      run: |
        dotnet publish code/delta-kusto -c release -r $dotnetOs \
          -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true \
          -p:PublishTrimmed=true -p:PublishReadyToRun=true \
          -o bin
    # Set environment variables
    - name: Set environment variables
      shell:  bash
      run: |
        # Exec path
        echo "deltaKustoSingleExecPath=$(pwd)/bin/$(exec)" >> $GITHUB_ENV
        # ADX integration
        echo "deltaKustoClusterUri=${{ secrets.CLUSTER_URI }}" >> $GITHUB_ENV
        echo "deltaKustoCurrentDb=${{ secrets.CURRENT_DB }}" >> $GITHUB_ENV
        echo "deltaKustoTargetDb=${{ secrets.TARGET_DB }}" >> $GITHUB_ENV
        echo "deltaKustoTenantId=${{ secrets.TENANT_ID }}" >> $GITHUB_ENV
        echo "deltaKustoSpId=${{ secrets.KUSTO_SP_ID }}" >> $GITHUB_ENV
        echo "deltaKustoSpSecret=${{ secrets.KUSTO_SP_SECRET }}" >> $GITHUB_ENV
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
    - name: File-based integration tests (out-of-proc)
      shell:  bash
      run: |
        # Disable parallelization of tests
        # See https://xunit.net/docs/running-tests-in-parallel
        dotnet test code/DeltaKustoFileIntegrationTest/ \
        --configuration Release --no-build --verbosity normal \
        -p:ParallelizeTestCollections=false

    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
    - name: ADX-based integration tests (out-of-proc)
      shell:  bash
      run: |
        # Disable parallelization of tests
        # See https://xunit.net/docs/running-tests-in-parallel
        dotnet test code/DeltaKustoAdxIntegrationTest \
        --configuration Release --no-build --verbosity normal \
        -p:ParallelizeTestCollections=false
