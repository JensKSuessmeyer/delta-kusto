name:  Release

on:
  workflow_dispatch:
  push:
    branches:
      - release/prod/*

jobs:
  linux:

    # Eventually, this should be multi-platform ; see https://stackoverflow.com/questions/57498605/github-actions-share-workspace-artifacts-between-jobs
    runs-on: ubuntu-latest
    
    env:
      os:  linux
      dotnetOs:  linux-x64

    steps:
    - uses: actions/checkout@v2
    - name: Patch version
      id:  patch-version
      run: python3 deployment/patch-version.py code/delta-kusto/delta-kusto.csproj ${{ github.run_number }}
    - name:  Output full version
      run:  |
        echo "Full version:  ${{ steps.patch-version.outputs.full-version }}"
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-restore
    - name: Install dependencies
      run: dotnet restore code
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build
    - name: Build
      run: dotnet build code --configuration Release --no-restore
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
    - name: Unit Tests
      run: |
        dotnet test code/DeltaKustoUnitTest --configuration Release --no-build \
          --verbosity normal --blame-hang-timeout 10s
    # See https://github.com/dotnet/designs/blob/main/accepted/2020/single-file/design.md#user-experience
    # & https://docs.microsoft.com/en-us/dotnet/core/deploying/single-file
    # & https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish
    - name: Build single file executable
      run: |
        dotnet publish code/delta-kusto -c release -r $dotnetOs \
          -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true \
          -p:PublishTrimmed=true -p:PublishReadyToRun=true \
          -o bin
    # See https://dev.to/neshaz/a-tutorial-for-tagging-releases-in-git-147e
    - name: Tags
      run: |
        git tag ${{ steps.patch-version.outputs.full-version }}
        git push --tags
    # See https://cli.github.com/manual/gh_auth
    - name: Authentication gh CLI
      run:  |
        echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
    # See https://cli.github.com/manual/gh_release
    - name: Create release
      run:  |
        gh release create ${{ steps.patch-version.outputs.full-version }}
    # See https://cli.github.com/manual/gh_release
    - name: Upload exec to release
      run:  |
        za="delta-kusto-${{ steps.patch-version.outputs.full-version }}-linux.tar.gz"
        echo "Zip archive:  $za"
        tar -czvf $za bin/delta-kusto
        gh release upload ${{ steps.patch-version.outputs.full-version }} $za
