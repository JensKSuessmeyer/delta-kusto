{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "frontDoorName": {
            "type": "string"
        }
    },
    "variables": {
        "Unique ID": "[uniqueString(concat(resourceGroup().id, 'kusto-x'))]",
        "Suffix": "[concat('delta-kusto-', variables('Unique ID'))]",
        "App Insights": "[concat('app-monitor-', variables('Suffix'))]",
        "Log Analytics": "[concat('infra-monitor-', variables('Suffix'))]",
        "Lake Storage Account": "[concat('deltakustol', variables('Unique ID'))]",
        "Blob Storage Account": "[concat('deltakustob', variables('Unique ID'))]",
        "API Telemetry Container": "api-telemetry",
        "App Plan": "[concat('app-plan-', variables('Suffix'))]",
        "Web Apps": [
            {
                "name": "[concat('delta-kusto-api-staging-', variables('Suffix'))]",
                "env": "staging"
            },
            {
                "name": "[concat('delta-kusto-api-prod-', variables('Suffix'))]",
                "env": "prod"
            }
        ],
        "Default Front Door": "[concat('front-door-', variables('Suffix'))]",
        "Front Door": "[if(equals(length(parameters('frontDoorName')), 0), variables('Default Front Door'), parameters('frontDoorName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Insights/components",
            "name": "[variables('App Insights')]",
            "apiVersion": "2015-05-01",
            "location": "[resourceGroup().location]",
            "tags": {
            },
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            },
            "dependsOn": [
            ]
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "name": "[variables('Log Analytics')]",
            "apiVersion": "2015-11-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                }
            },
            "dependsOn": [
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('Lake Storage Account')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "isHnsEnabled": true
            },
            "resources": [
                {
                    "apiVersion": "2019-06-01",
                    "type": "blobServices/containers",
                    "name": "[concat('default/', variables('API Telemetry Container'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('Lake Storage Account'))]"
                    ],
                    "properties": {
                        "publicAccess": "None"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('Blob Storage Account')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "isHnsEnabled": false
            },
            "resources": [
                {
                    "apiVersion": "2019-06-01",
                    "type": "blobServices/containers",
                    "name": "[concat('default/', variables('API Telemetry Container'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('Blob Storage Account'))]"
                    ],
                    "properties": {
                        "publicAccess": "None"
                    }
                },
                {
                    "apiVersion": "2019-06-01",
                    "type": "Microsoft.Storage/storageAccounts/managementPolicies",
                    "name": "api-telemetry-raw",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('Blob Storage Account'))]"
                    ],
                    "properties": {
                        "policy": {
                            "rules": [
                                {
                                    "name": "cool-logs",
                                    "enabled": true,
                                    "type": "Lifecycle",
                                    "definition": {
                                        "filters": {
                                            "prefixMatch": [
                                                "[concat(variables('API Telemetry Container'), '/raw-telemetry')]"
                                            ]
                                        },
                                        "actions": {
                                            "baseBlob": {
                                                "tierToCool": {
                                                    "daysAfterModificationGreaterThan": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('App Plan')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "sku": {
                "name": "B1",
                "tier": "Basic",
                "size": "B1",
                "family": "B",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "copy": {
                "name": "web-app-loop",
                "count": "[length(variables('Web Apps'))]",
                "mode": "parallel"
            },
            "name": "[variables('Web Apps')[copyIndex()].name]",
            "location": "[resourceGroup().location]",
            "tags": {
                "env": "[variables('Web Apps')[copyIndex()].env]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('App Plan'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('Blob Storage Account'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('App Plan'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "storageConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('Blob Storage Account'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('Blob Storage Account')), '2019-06-01').keys[0].value,';')]"
                        },
                        {
                            "name": "telemetryContainerName",
                            "value": "[variables('API Telemetry Container')]"
                        },
                        {
                            "name": "env",
                            "value": "[variables('Web Apps')[copyIndex()].env]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/frontDoors",
            "name": "[variables('Front Door')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('Web Apps')[0].name)]",
                "[resourceId('Microsoft.Web/sites', variables('Web Apps')[1].name)]"
            ],
            "properties": {
                "healthProbeSettings": [
                    {
                        "name": "healthProbeSettings",
                        "properties": {
                            "path": "/",
                            "protocol": "Https",
                            "intervalInSeconds": 120
                        }
                    }
                ],
                "loadBalancingSettings": [
                    {
                        "name": "loadBalancingSettings",
                        "properties": {
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2
                        }
                    }
                ],
                "backendPools": [
                    {
                        "name": "prod-web-app",
                        "properties": {
                            "backends": [
                                {
                                    "address": "[reference(resourceId('Microsoft.Web/sites', variables('Web Apps')[1].name), '2019-08-01').hostNames[0]]",
                                    "backendHostHeader": "[reference(resourceId('Microsoft.Web/sites', variables('Web Apps')[1].name), '2019-08-01').hostNames[0]]",
                                    "httpsPort": 443,
                                    "httpPort": 80,
                                    "weight": 100,
                                    "priority": 1
                                }
                            ],
                            "loadBalancingSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', variables('Front Door'), 'loadBalancingSettings')]"
                            },
                            "healthProbeSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', variables('Front Door'), 'healthProbeSettings')]"
                            }
                        }
                    }
                ],
                "frontendEndpoints": [
                    {
                        "name": "defaultFrontendEndpoint",
                        "properties": {
                            "hostName": "[concat(variables('Front Door'), '.azurefd.net')]",
                            "sessionAffinityEnabledState": "Disabled",
                            "sessionAffinityTtlSeconds": 0
                        }
                    }
                ],
                "routingRules": [
                    {
                        "name": "prodRoutingRule",
                        "properties": {
                            "frontendEndpoints": [
                                {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', variables('Front Door'), 'defaultFrontendEndpoint')]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "forwardingProtocol": "HttpsOnly",
                                "backendPool": {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', variables('Front Door'), 'prod-web-app')]"
                                }
                            },
                            "enabledState": "Enabled"
                        }
                    }
                ],
                "enabledState": "Enabled"
            },
            "resources": [
            ]
        }
    ],
    "outputs": {
    }
}